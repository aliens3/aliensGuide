# これからやること ==============================================================

[[page]]
t = "title"
c = ""
p ="""
1 これからやること
"""

[[page]]
t = "left"
c = "yaranai1"
p = """
前回の振り返りを簡単にしよう．まずmPONGを作るためには，

1. メモリの読み書き
2. 四則演算
3. 条件分岐

の3つの機能が必要で，かつこの3つの機能さえあれば十分でmPONGを作れそうだった．

と言っても，本当のところ何ができるコンピュータなのかは明確じゃない．
コンピュータが出来ることを完全に明確に把握しようと思ったら
どうすればいいと思う？
"""

[[page]]
t = "right"
c = "yaruo1"
p = """
そうだね，それは完全に納得しているよ．
"""

[[page]]
t = "left"
c = "yaranai1"
p = """
そして，そこから一般に，あるコンピュータがこの3つの機能を
実行できるとき，このコンピュータはどんなことでも，
例えばwindows11を作ったり，twitterアプリを作ったり，amazonのwebサイトを作ったり，
そういうことが出来ると主張した．
"""

[[page]]
t = "right"
c = "yaruo1"
p = """
そこは，全く納得してないね．
"""

[[page]]
t = "left"
c = "yaranai1"
p = """
健全な懐疑をありがとう．
で，納得できない原因は何だったかな？
"""

[[page]]
t = "right"
c = "yaruo1"
p = """
3つの機能っていうのが曖昧すぎるってことだな．

1. メモリの読み書き
2. 四則演算
3. 条件分岐

ができるコンピュータって言っても，何が四則演算で何が条件分岐なんだ？
"""

[[page]]
t = "right"
c = "yaruo1"
p = """

3つの機能だけで，とか言いながら，後から「実はこれも四則演算に含める」とか「これも解釈次第では条件分岐なんだ」とか言われたら
まあそれなら，twitterを作れるのもおかしくはないわな，ってなるだろ？
だから，3つの機能だけでって言われても，すごい感じもするし，騙された感じもしてよく分からないんだ．
"""

[[page]]
t = "left"
c = "yaranai1"
p = """
そういうことだな．確かに，曖昧な言葉で凄そうなことを言って
よくよく聞いてみると大したことない，ってパターンは良くあるからな．
じゃあ，この3つの機能ってのが，本当のところ，どんな機能なのかをはっきりさせようか．
"""

[[page]]
t = "left"
c = "yaranai1"
p = """
そのためにはどうしたらいいと思う？
"""

[[page]]
t = "right"
c = "yaruo1"
p = """
うーん，コンピュータが出来ることの一覧表を作るとかかな？
作図の問題も
- 定規で2点を通る直線を引く
- コンパスで円を書く

の2つがやれることだろ？この2つを繰り返して作図できるか・できないかを決めるわけだよな．
"""
[[page]]
t = "right"
c = "yaruo1"
p = """
なら，コンピュータも同じように，できる動作の一覧をもっとはっきり
示すべきじゃないか？
"""

[[page]]
t = "raw"
c = ""
p = """
<hr>
"""

[[page]]
t = "aut"
c = ""
p = """
正確には，作図で出来る操作は，次の5つです．
- 既知の二点に対し、それらを通る直線を引く。
- 既知の一点を中心とし、それ以外の既知の点を通るような円を描く。
- 互いに平行でない既知の二直線から、その交点を得る。
- 既知の円と直線から、その高々二個の交点を得る。
- 既知の二つの円から、その高々二個の交点を得る。

この5つを有限回繰り返して，必要な点や長さを得ることができるならば目的の作図が可能，できなければ目的の作図は不可能であるということになります．

コンピュータについても同じように，出来る操作を色々な解釈ができないよう，はっきりと定めます．その操作を有限回数繰り返せば，例えばwindows 11やtwitterアプリを作れる，というのがch1の最後の主張を正確に表したものになります．

"""


# これからやること ==============================================================

[[page]]
t = "title"
c = ""
p ="""
2 メモリアクセスA命令
"""

[[page]]
t = "left"
c = "yaranai1"
p = """
じゃあ，

1. メモリの読み書き
2. 四則演算
3. 条件分岐

のうち，メモリの読み書き，さらにその中でメモリを読むところからはじめようか．
メモリはこういう構造をしていたな．

"""

[[page]]
t = "raw"
c = ""
p = """
<img src="" alt="メモリの構造，ボールの位置xの場所を明示" srcset="">
"""

[[page]]
t = "left"
c = "yaranai1"
p = """
このメモリには例えば，ボールの位置xが保存されている．
やりたいことは，
現在のボールの位置が例えばx=5であることを読み込んだり，それを読み込んだ後に，これに3を足して，8という情報を書き込むということだ．
これを読むためにはメモリにはどんな情報を入力する必要があるかな？
"""

[[page]]
t = "right"
c = "yaruo1"
p = """
この例だと，上から10番目の16bitにボールの位置は記録されているわけだから，
その位置を示す10とか，そういう情報は入れる必要があるだろうな．
"""

[[page]]
t = "left"
c = "yaranai1"
p = """
そうだね，そういうメモリでの番地を表す情報をアドレスという．
コンピュータでは一般的に番号は0からカウントすることが多いから，上から十番目は9になる．
だから，9という入力をメモリにして，9番地にあるボールの位置を示す16bitを出力する機能がメモリには必要そうだな．
"""

[[page]]
t = "right"
c = "yaruo1"
p = """
これで，アドレスを入力すると，そこにある16bitを読むことがが出来るわけか．
書きはどうするんだ？
"""

[[page]]
t = "left"
c = "yaranai1"
p = """
書くためには，何を書くのかの情報が必要だよな．それは16bitの情報だ．
"""

[[page]]
t = "right"
c = "yaruo1"
p = """
ということは，書く情報16bitと，アドレスの15bitを入力すれば，どこに何を書き込むかが指定できるから，書きもできるな．
"""

[[page]]
t = "left"
c = "yaranai1"
p = """
いや，情報はそれだけだと足りない．例えば，やるおがメモリ内で働く従業員だとしよう．
このとき，アドレス15bitAと，書き込み内容16bitBの2つだけが与えられたら，
- そのアドレスAにBを書き込むのか
- それとも，アドレスAに元々書いてあった
"""










[[page]]
t = "left"
c = "yaranai1"
p = """
ああ，コンピュータでは一般的に一番上を0番地とすることが多いから，上から十番目は9番地になる．
こういうふうに上から順番に番地をつけていったものをメモリのアドレスという．
つまり，アドレスの情報をコンピュータに渡せば，コンピュータはメモリの任意の場所にアクセスできるわけだな．
"""

[[page]]
t = "left"
c = "yaranai1"
p = """
アドレスは何番地まであるかな？
"""

[[page]]
t = "right"
c = "yaruo1"
p = """
2^14+2^13+1だから．．．計算してくれ．
"""

[[page]]
t = "left"
c = "yaranai1"
p = """
じゃあ聞き方を変えよう．アドレスは何bitあれば指定することができるかな？
"""

[[page]]
t = "right"
c = "yaruo1"
p = """
それなら簡単だな．$2^14<2^14+2^13+1<2^15$だから，
15bitが必要かつ十分だよ．
"""

[[page]]
t = "left"
c = "yaranai1"
p = """
そうだな．そこでメモリのアドレスを指定する15bitをコンピュータを構成するユニットとして追加しよう．
しかし，15bitは気持ち悪いから，16bitに揃えて，最上位の1bitは使わないことにする．
このユニットをAレジスタ，と呼ぼう．AはアドレスのAで，レジスタはregister=登録するという意味だ．
"""

[[page]]
t = "left"
c = "yaranai1"
p = """
そして，このAレジスタに15bitの番地を書き込む命令が出来る．これをA命令とよぼう．
A命令は@xのように書くことにしよう．
"""

[[page]]
t = "right"
c = "yaruo1"
p = """
こいつもメモリの一部にぶち込めるんじゃないのか？同じ16bitなんだし．
"""

[[page]]
t = "left"
c = "yaranai1"
p = """
確かにそうしようと思えばできる．しかし実際にはそうしない．
理由は分割したほうが処理スピードが上がるからだ．
かかる時間が増えることで，全てメモリで統合したとしても本質的に出来ることには差はない．
"""

[[page]]
t = "right"
c = "yaruo1"
p = """
Aレジスタってことは別のレジスタもあるのか？
"""

[[page]]
t = "left"
c = "yaranai1"
p = """
あと1つ作る予定だ．実際的にはいくつ作ってもいい．
さっきも言ったように，スピードを上げるためにレジスタはあるから，
レジスタをいくつ作ろうが本質的にやれることは変わらないんだ．
"""

[[page]]
t = "left"
c = "yaranai1"
p = """
ここまでの話から，@xという命令をすると，
- xが2進法に直されてAレジスタに書き込まれる．
- Aレジスタで指定されるメモリ番地の内容がメモリから出力される．
ということが起きる．これでメモリの読みが出来ることになるな．
"""

[[page]]
t = "right"
c = "yaruo1"
p = """
読む，と言ってもMレジスタにそのアドレスにある値が書き込まれるってことだよな．
"""

[[page]]
t = "left"
c = "yaranai1"
p = """
うん，ここではそれを読むというふうに呼ぶことにしよう．
じゃあ，次はメモリに書くことだ．
"""














